/**
 * generated by Xtext 2.24.0
 */
package uk.ac.kcl.inf.languages.tracery.traceryLanguage.impl;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

import org.eclipse.emf.ecore.impl.EPackageImpl;

import uk.ac.kcl.inf.languages.tracery.traceryLanguage.InitialJSONLine;
import uk.ac.kcl.inf.languages.tracery.traceryLanguage.InnerStatement;
import uk.ac.kcl.inf.languages.tracery.traceryLanguage.NormalJSONLine;
import uk.ac.kcl.inf.languages.tracery.traceryLanguage.StartingJSONExpression;
import uk.ac.kcl.inf.languages.tracery.traceryLanguage.TraceryLanguageFactory;
import uk.ac.kcl.inf.languages.tracery.traceryLanguage.TraceryLanguagePackage;
import uk.ac.kcl.inf.languages.tracery.traceryLanguage.TraceryProgram;
import uk.ac.kcl.inf.languages.tracery.traceryLanguage.VariableDecleration;
import uk.ac.kcl.inf.languages.tracery.traceryLanguage.normalValue;
import uk.ac.kcl.inf.languages.tracery.traceryLanguage.startValue;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Package</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class TraceryLanguagePackageImpl extends EPackageImpl implements TraceryLanguagePackage
{
  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass traceryProgramEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass variableDeclerationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass initialJSONLineEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass normalJSONLineEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass startValueEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass normalValueEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass innerStatementEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass startingJSONExpressionEClass = null;

  /**
   * Creates an instance of the model <b>Package</b>, registered with
   * {@link org.eclipse.emf.ecore.EPackage.Registry EPackage.Registry} by the package
   * package URI value.
   * <p>Note: the correct way to create the package is via the static
   * factory method {@link #init init()}, which also performs
   * initialization of the package, or returns the registered package,
   * if one already exists.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.eclipse.emf.ecore.EPackage.Registry
   * @see uk.ac.kcl.inf.languages.tracery.traceryLanguage.TraceryLanguagePackage#eNS_URI
   * @see #init()
   * @generated
   */
  private TraceryLanguagePackageImpl()
  {
    super(eNS_URI, TraceryLanguageFactory.eINSTANCE);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private static boolean isInited = false;

  /**
   * Creates, registers, and initializes the <b>Package</b> for this model, and for any others upon which it depends.
   *
   * <p>This method is used to initialize {@link TraceryLanguagePackage#eINSTANCE} when that field is accessed.
   * Clients should not invoke it directly. Instead, they should simply access that field to obtain the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #eNS_URI
   * @see #createPackageContents()
   * @see #initializePackageContents()
   * @generated
   */
  public static TraceryLanguagePackage init()
  {
    if (isInited) return (TraceryLanguagePackage)EPackage.Registry.INSTANCE.getEPackage(TraceryLanguagePackage.eNS_URI);

    // Obtain or create and register package
    Object registeredTraceryLanguagePackage = EPackage.Registry.INSTANCE.get(eNS_URI);
    TraceryLanguagePackageImpl theTraceryLanguagePackage = registeredTraceryLanguagePackage instanceof TraceryLanguagePackageImpl ? (TraceryLanguagePackageImpl)registeredTraceryLanguagePackage : new TraceryLanguagePackageImpl();

    isInited = true;

    // Create package meta-data objects
    theTraceryLanguagePackage.createPackageContents();

    // Initialize created meta-data
    theTraceryLanguagePackage.initializePackageContents();

    // Mark meta-data to indicate it can't be changed
    theTraceryLanguagePackage.freeze();

    // Update the registry and return the package
    EPackage.Registry.INSTANCE.put(TraceryLanguagePackage.eNS_URI, theTraceryLanguagePackage);
    return theTraceryLanguagePackage;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getTraceryProgram()
  {
    return traceryProgramEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getTraceryProgram_InitialStatement()
  {
    return (EReference)traceryProgramEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getTraceryProgram_Statements()
  {
    return (EReference)traceryProgramEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getVariableDecleration()
  {
    return variableDeclerationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getVariableDecleration_Name()
  {
    return (EAttribute)variableDeclerationEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getInitialJSONLine()
  {
    return initialJSONLineEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getInitialJSONLine_StartVal()
  {
    return (EReference)initialJSONLineEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getInitialJSONLine_Vals()
  {
    return (EReference)initialJSONLineEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getNormalJSONLine()
  {
    return normalJSONLineEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getstartValue()
  {
    return startValueEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getstartValue_Value()
  {
    return (EReference)startValueEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getnormalValue()
  {
    return normalValueEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getnormalValue_Value()
  {
    return (EReference)normalValueEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getInnerStatement()
  {
    return innerStatementEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getInnerStatement_Value()
  {
    return (EAttribute)innerStatementEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getStartingJSONExpression()
  {
    return startingJSONExpressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getStartingJSONExpression_StartVal()
  {
    return (EReference)startingJSONExpressionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getStartingJSONExpression_Vals()
  {
    return (EReference)startingJSONExpressionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getStartingJSONExpression_Var()
  {
    return (EReference)startingJSONExpressionEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public TraceryLanguageFactory getTraceryLanguageFactory()
  {
    return (TraceryLanguageFactory)getEFactoryInstance();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isCreated = false;

  /**
   * Creates the meta-model objects for the package.  This method is
   * guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void createPackageContents()
  {
    if (isCreated) return;
    isCreated = true;

    // Create classes and their features
    traceryProgramEClass = createEClass(TRACERY_PROGRAM);
    createEReference(traceryProgramEClass, TRACERY_PROGRAM__INITIAL_STATEMENT);
    createEReference(traceryProgramEClass, TRACERY_PROGRAM__STATEMENTS);

    variableDeclerationEClass = createEClass(VARIABLE_DECLERATION);
    createEAttribute(variableDeclerationEClass, VARIABLE_DECLERATION__NAME);

    initialJSONLineEClass = createEClass(INITIAL_JSON_LINE);
    createEReference(initialJSONLineEClass, INITIAL_JSON_LINE__START_VAL);
    createEReference(initialJSONLineEClass, INITIAL_JSON_LINE__VALS);

    normalJSONLineEClass = createEClass(NORMAL_JSON_LINE);

    startValueEClass = createEClass(START_VALUE);
    createEReference(startValueEClass, START_VALUE__VALUE);

    normalValueEClass = createEClass(NORMAL_VALUE);
    createEReference(normalValueEClass, NORMAL_VALUE__VALUE);

    innerStatementEClass = createEClass(INNER_STATEMENT);
    createEAttribute(innerStatementEClass, INNER_STATEMENT__VALUE);

    startingJSONExpressionEClass = createEClass(STARTING_JSON_EXPRESSION);
    createEReference(startingJSONExpressionEClass, STARTING_JSON_EXPRESSION__START_VAL);
    createEReference(startingJSONExpressionEClass, STARTING_JSON_EXPRESSION__VALS);
    createEReference(startingJSONExpressionEClass, STARTING_JSON_EXPRESSION__VAR);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isInitialized = false;

  /**
   * Complete the initialization of the package and its meta-model.  This
   * method is guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void initializePackageContents()
  {
    if (isInitialized) return;
    isInitialized = true;

    // Initialize package
    setName(eNAME);
    setNsPrefix(eNS_PREFIX);
    setNsURI(eNS_URI);

    // Create type parameters

    // Set bounds for type parameters

    // Add supertypes to classes
    variableDeclerationEClass.getESuperTypes().add(this.getInnerStatement());
    startingJSONExpressionEClass.getESuperTypes().add(this.getNormalJSONLine());

    // Initialize classes and features; add operations and parameters
    initEClass(traceryProgramEClass, TraceryProgram.class, "TraceryProgram", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getTraceryProgram_InitialStatement(), this.getInitialJSONLine(), null, "initialStatement", null, 0, 1, TraceryProgram.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getTraceryProgram_Statements(), this.getNormalJSONLine(), null, "statements", null, 0, -1, TraceryProgram.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(variableDeclerationEClass, VariableDecleration.class, "VariableDecleration", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getVariableDecleration_Name(), ecorePackage.getEString(), "name", null, 0, 1, VariableDecleration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(initialJSONLineEClass, InitialJSONLine.class, "InitialJSONLine", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getInitialJSONLine_StartVal(), this.getstartValue(), null, "startVal", null, 0, -1, InitialJSONLine.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getInitialJSONLine_Vals(), this.getnormalValue(), null, "vals", null, 0, -1, InitialJSONLine.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(normalJSONLineEClass, NormalJSONLine.class, "NormalJSONLine", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(startValueEClass, startValue.class, "startValue", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getstartValue_Value(), this.getInnerStatement(), null, "value", null, 0, -1, startValue.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(normalValueEClass, normalValue.class, "normalValue", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getnormalValue_Value(), this.getInnerStatement(), null, "value", null, 0, -1, normalValue.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(innerStatementEClass, InnerStatement.class, "InnerStatement", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getInnerStatement_Value(), ecorePackage.getEString(), "value", null, 0, 1, InnerStatement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(startingJSONExpressionEClass, StartingJSONExpression.class, "StartingJSONExpression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getStartingJSONExpression_StartVal(), this.getstartValue(), null, "startVal", null, 0, -1, StartingJSONExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getStartingJSONExpression_Vals(), this.getnormalValue(), null, "vals", null, 0, -1, StartingJSONExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getStartingJSONExpression_Var(), this.getVariableDecleration(), null, "var", null, 0, 1, StartingJSONExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    // Create resource
    createResource(eNS_URI);
  }

} //TraceryLanguagePackageImpl
