/**
 * generated by Xtext 2.24.0
 */
package uk.ac.kcl.inf.languages.tracery.traceryLanguage.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import uk.ac.kcl.inf.languages.tracery.traceryLanguage.FinalJSONLine;
import uk.ac.kcl.inf.languages.tracery.traceryLanguage.InitialJSONLines;
import uk.ac.kcl.inf.languages.tracery.traceryLanguage.Statement;
import uk.ac.kcl.inf.languages.tracery.traceryLanguage.TraceryLanguagePackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Statement</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link uk.ac.kcl.inf.languages.tracery.traceryLanguage.impl.StatementImpl#getInitialStatement <em>Initial Statement</em>}</li>
 *   <li>{@link uk.ac.kcl.inf.languages.tracery.traceryLanguage.impl.StatementImpl#getFinalStatement <em>Final Statement</em>}</li>
 * </ul>
 *
 * @generated
 */
public class StatementImpl extends MinimalEObjectImpl.Container implements Statement
{
  /**
   * The cached value of the '{@link #getInitialStatement() <em>Initial Statement</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getInitialStatement()
   * @generated
   * @ordered
   */
  protected EList<InitialJSONLines> initialStatement;

  /**
   * The cached value of the '{@link #getFinalStatement() <em>Final Statement</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFinalStatement()
   * @generated
   * @ordered
   */
  protected FinalJSONLine finalStatement;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected StatementImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return TraceryLanguagePackage.Literals.STATEMENT;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<InitialJSONLines> getInitialStatement()
  {
    if (initialStatement == null)
    {
      initialStatement = new EObjectContainmentEList<InitialJSONLines>(InitialJSONLines.class, this, TraceryLanguagePackage.STATEMENT__INITIAL_STATEMENT);
    }
    return initialStatement;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public FinalJSONLine getFinalStatement()
  {
    return finalStatement;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetFinalStatement(FinalJSONLine newFinalStatement, NotificationChain msgs)
  {
    FinalJSONLine oldFinalStatement = finalStatement;
    finalStatement = newFinalStatement;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, TraceryLanguagePackage.STATEMENT__FINAL_STATEMENT, oldFinalStatement, newFinalStatement);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setFinalStatement(FinalJSONLine newFinalStatement)
  {
    if (newFinalStatement != finalStatement)
    {
      NotificationChain msgs = null;
      if (finalStatement != null)
        msgs = ((InternalEObject)finalStatement).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - TraceryLanguagePackage.STATEMENT__FINAL_STATEMENT, null, msgs);
      if (newFinalStatement != null)
        msgs = ((InternalEObject)newFinalStatement).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - TraceryLanguagePackage.STATEMENT__FINAL_STATEMENT, null, msgs);
      msgs = basicSetFinalStatement(newFinalStatement, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, TraceryLanguagePackage.STATEMENT__FINAL_STATEMENT, newFinalStatement, newFinalStatement));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case TraceryLanguagePackage.STATEMENT__INITIAL_STATEMENT:
        return ((InternalEList<?>)getInitialStatement()).basicRemove(otherEnd, msgs);
      case TraceryLanguagePackage.STATEMENT__FINAL_STATEMENT:
        return basicSetFinalStatement(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case TraceryLanguagePackage.STATEMENT__INITIAL_STATEMENT:
        return getInitialStatement();
      case TraceryLanguagePackage.STATEMENT__FINAL_STATEMENT:
        return getFinalStatement();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case TraceryLanguagePackage.STATEMENT__INITIAL_STATEMENT:
        getInitialStatement().clear();
        getInitialStatement().addAll((Collection<? extends InitialJSONLines>)newValue);
        return;
      case TraceryLanguagePackage.STATEMENT__FINAL_STATEMENT:
        setFinalStatement((FinalJSONLine)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case TraceryLanguagePackage.STATEMENT__INITIAL_STATEMENT:
        getInitialStatement().clear();
        return;
      case TraceryLanguagePackage.STATEMENT__FINAL_STATEMENT:
        setFinalStatement((FinalJSONLine)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case TraceryLanguagePackage.STATEMENT__INITIAL_STATEMENT:
        return initialStatement != null && !initialStatement.isEmpty();
      case TraceryLanguagePackage.STATEMENT__FINAL_STATEMENT:
        return finalStatement != null;
    }
    return super.eIsSet(featureID);
  }

} //StatementImpl
