/**
 * generated by Xtext 2.24.0
 */
package uk.ac.kcl.inf.languages.tracery.traceryLanguage.util;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.util.Switch;

import uk.ac.kcl.inf.languages.tracery.traceryLanguage.*;

/**
 * <!-- begin-user-doc -->
 * The <b>Switch</b> for the model's inheritance hierarchy.
 * It supports the call {@link #doSwitch(EObject) doSwitch(object)}
 * to invoke the <code>caseXXX</code> method for each class of the model,
 * starting with the actual class of the object
 * and proceeding up the inheritance hierarchy
 * until a non-null result is returned,
 * which is the result of the switch.
 * <!-- end-user-doc -->
 * @see uk.ac.kcl.inf.languages.tracery.traceryLanguage.TraceryLanguagePackage
 * @generated
 */
public class TraceryLanguageSwitch<T> extends Switch<T>
{
  /**
   * The cached model package
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected static TraceryLanguagePackage modelPackage;

  /**
   * Creates an instance of the switch.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public TraceryLanguageSwitch()
  {
    if (modelPackage == null)
    {
      modelPackage = TraceryLanguagePackage.eINSTANCE;
    }
  }

  /**
   * Checks whether this is a switch for the given package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param ePackage the package in question.
   * @return whether this is a switch for the given package.
   * @generated
   */
  @Override
  protected boolean isSwitchFor(EPackage ePackage)
  {
    return ePackage == modelPackage;
  }

  /**
   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the first non-null result returned by a <code>caseXXX</code> call.
   * @generated
   */
  @Override
  protected T doSwitch(int classifierID, EObject theEObject)
  {
    switch (classifierID)
    {
      case TraceryLanguagePackage.TRACERY_PROGRAM:
      {
        TraceryProgram traceryProgram = (TraceryProgram)theEObject;
        T result = caseTraceryProgram(traceryProgram);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case TraceryLanguagePackage.STATEMENT:
      {
        Statement statement = (Statement)theEObject;
        T result = caseStatement(statement);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case TraceryLanguagePackage.INITIAL_JSON_LINES:
      {
        InitialJSONLines initialJSONLines = (InitialJSONLines)theEObject;
        T result = caseInitialJSONLines(initialJSONLines);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case TraceryLanguagePackage.FINAL_JSON_LINE:
      {
        FinalJSONLine finalJSONLine = (FinalJSONLine)theEObject;
        T result = caseFinalJSONLine(finalJSONLine);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case TraceryLanguagePackage.INITIAL_JSON_ENDING:
      {
        InitialJSONEnding initialJSONEnding = (InitialJSONEnding)theEObject;
        T result = caseInitialJSONEnding(initialJSONEnding);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case TraceryLanguagePackage.INNER_VALUES:
      {
        InnerValues innerValues = (InnerValues)theEObject;
        T result = caseInnerValues(innerValues);
        if (result == null) result = caseInitialJSONEnding(innerValues);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case TraceryLanguagePackage.FINAL_JSON_ENDING:
      {
        FinalJSONEnding finalJSONEnding = (FinalJSONEnding)theEObject;
        T result = caseFinalJSONEnding(finalJSONEnding);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case TraceryLanguagePackage.START_VALUE:
      {
        StartValue startValue = (StartValue)theEObject;
        T result = caseStartValue(startValue);
        if (result == null) result = caseInnerValues(startValue);
        if (result == null) result = caseFinalJSONEnding(startValue);
        if (result == null) result = caseInitialJSONEnding(startValue);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case TraceryLanguagePackage.NORMAL_VALUE:
      {
        NormalValue normalValue = (NormalValue)theEObject;
        T result = caseNormalValue(normalValue);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case TraceryLanguagePackage.INNER_STATEMENTS:
      {
        InnerStatements innerStatements = (InnerStatements)theEObject;
        T result = caseInnerStatements(innerStatements);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case TraceryLanguagePackage.STRING_DECLARATION:
      {
        StringDeclaration stringDeclaration = (StringDeclaration)theEObject;
        T result = caseStringDeclaration(stringDeclaration);
        if (result == null) result = caseInnerStatements(stringDeclaration);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case TraceryLanguagePackage.DECLARED_VARIABLE:
      {
        DeclaredVariable declaredVariable = (DeclaredVariable)theEObject;
        T result = caseDeclaredVariable(declaredVariable);
        if (result == null) result = caseInnerStatements(declaredVariable);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      default: return defaultCase(theEObject);
    }
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Tracery Program</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Tracery Program</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseTraceryProgram(TraceryProgram object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Statement</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Statement</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseStatement(Statement object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Initial JSON Lines</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Initial JSON Lines</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseInitialJSONLines(InitialJSONLines object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Final JSON Line</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Final JSON Line</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseFinalJSONLine(FinalJSONLine object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Initial JSON Ending</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Initial JSON Ending</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseInitialJSONEnding(InitialJSONEnding object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Inner Values</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Inner Values</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseInnerValues(InnerValues object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Final JSON Ending</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Final JSON Ending</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseFinalJSONEnding(FinalJSONEnding object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Start Value</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Start Value</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseStartValue(StartValue object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Normal Value</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Normal Value</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseNormalValue(NormalValue object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Inner Statements</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Inner Statements</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseInnerStatements(InnerStatements object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>String Declaration</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>String Declaration</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseStringDeclaration(StringDeclaration object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Declared Variable</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Declared Variable</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseDeclaredVariable(DeclaredVariable object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EObject</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch, but this is the last case anyway.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EObject</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject)
   * @generated
   */
  @Override
  public T defaultCase(EObject object)
  {
    return null;
  }

} //TraceryLanguageSwitch
