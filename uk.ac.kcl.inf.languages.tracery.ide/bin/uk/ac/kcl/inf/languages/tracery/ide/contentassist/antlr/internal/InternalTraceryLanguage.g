/*
 * generated by Xtext 2.24.0
 */
grammar InternalTraceryLanguage;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package uk.ac.kcl.inf.languages.tracery.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package uk.ac.kcl.inf.languages.tracery.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import uk.ac.kcl.inf.languages.tracery.services.TraceryLanguageGrammarAccess;

}
@parser::members {
	private TraceryLanguageGrammarAccess grammarAccess;

	public void setGrammarAccess(TraceryLanguageGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleTraceryProgram
entryRuleTraceryProgram
:
{ before(grammarAccess.getTraceryProgramRule()); }
	 ruleTraceryProgram
{ after(grammarAccess.getTraceryProgramRule()); } 
	 EOF 
;

// Rule TraceryProgram
ruleTraceryProgram 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTraceryProgramAccess().getGroup()); }
		(rule__TraceryProgram__Group__0)
		{ after(grammarAccess.getTraceryProgramAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVariableDecleration
entryRuleVariableDecleration
@init { 
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
:
{ before(grammarAccess.getVariableDeclerationRule()); }
	 ruleVariableDecleration
{ after(grammarAccess.getVariableDeclerationRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule VariableDecleration
ruleVariableDecleration 
	@init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVariableDeclerationAccess().getNameAssignment()); }
		(rule__VariableDecleration__NameAssignment)
		{ after(grammarAccess.getVariableDeclerationAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}

// Entry rule entryRuleInitialJSONLine
entryRuleInitialJSONLine
@init { 
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");
}
:
{ before(grammarAccess.getInitialJSONLineRule()); }
	 ruleInitialJSONLine
{ after(grammarAccess.getInitialJSONLineRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule InitialJSONLine
ruleInitialJSONLine 
	@init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInitialJSONLineAccess().getGroup()); }
		(rule__InitialJSONLine__Group__0)
		{ after(grammarAccess.getInitialJSONLineAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}

// Entry rule entryRuleNormalJSONLine
entryRuleNormalJSONLine
@init { 
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");
}
:
{ before(grammarAccess.getNormalJSONLineRule()); }
	 ruleNormalJSONLine
{ after(grammarAccess.getNormalJSONLineRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule NormalJSONLine
ruleNormalJSONLine 
	@init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNormalJSONLineAccess().getGroup()); }
		(rule__NormalJSONLine__Group__0)
		{ after(grammarAccess.getNormalJSONLineAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}

// Entry rule entryRulestartValue
entryRulestartValue
@init { 
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");
}
:
{ before(grammarAccess.getStartValueRule()); }
	 rulestartValue
{ after(grammarAccess.getStartValueRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule startValue
rulestartValue 
	@init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStartValueAccess().getGroup()); }
		(rule__StartValue__Group__0)
		{ after(grammarAccess.getStartValueAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}

// Entry rule entryRulenormalValue
entryRulenormalValue
@init { 
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");
}
:
{ before(grammarAccess.getNormalValueRule()); }
	 rulenormalValue
{ after(grammarAccess.getNormalValueRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule normalValue
rulenormalValue 
	@init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNormalValueAccess().getGroup()); }
		(rule__NormalValue__Group__0)
		{ after(grammarAccess.getNormalValueAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}

// Entry rule entryRuleInnerStatement
entryRuleInnerStatement
@init { 
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
:
{ before(grammarAccess.getInnerStatementRule()); }
	 ruleInnerStatement
{ after(grammarAccess.getInnerStatementRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule InnerStatement
ruleInnerStatement 
	@init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInnerStatementAccess().getAlternatives()); }
		(rule__InnerStatement__Alternatives)
		{ after(grammarAccess.getInnerStatementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}

// Entry rule entryRuleStartingJSONExpression
entryRuleStartingJSONExpression
@init { 
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
:
{ before(grammarAccess.getStartingJSONExpressionRule()); }
	 ruleStartingJSONExpression
{ after(grammarAccess.getStartingJSONExpressionRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule StartingJSONExpression
ruleStartingJSONExpression 
	@init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStartingJSONExpressionAccess().getVarAssignment()); }
		(rule__StartingJSONExpression__VarAssignment)
		{ after(grammarAccess.getStartingJSONExpressionAccess().getVarAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}

rule__InnerStatement__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInnerStatementAccess().getValueAssignment_0()); }
		(rule__InnerStatement__ValueAssignment_0)
		{ after(grammarAccess.getInnerStatementAccess().getValueAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getInnerStatementAccess().getGroup_1()); }
		(rule__InnerStatement__Group_1__0)
		{ after(grammarAccess.getInnerStatementAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getInnerStatementAccess().getGroup_2()); }
		(rule__InnerStatement__Group_2__0)
		{ after(grammarAccess.getInnerStatementAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getInnerStatementAccess().getGroup_3()); }
		(rule__InnerStatement__Group_3__0)
		{ after(grammarAccess.getInnerStatementAccess().getGroup_3()); }
	)
	|
	(
		{ before(grammarAccess.getInnerStatementAccess().getGroup_4()); }
		(rule__InnerStatement__Group_4__0)
		{ after(grammarAccess.getInnerStatementAccess().getGroup_4()); }
	)
	|
	(
		{ before(grammarAccess.getInnerStatementAccess().getGroup_5()); }
		(rule__InnerStatement__Group_5__0)
		{ after(grammarAccess.getInnerStatementAccess().getGroup_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TraceryProgram__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TraceryProgram__Group__0__Impl
	rule__TraceryProgram__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TraceryProgram__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTraceryProgramAccess().getLeftCurlyBracketKeyword_0()); }
	'{'
	{ after(grammarAccess.getTraceryProgramAccess().getLeftCurlyBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TraceryProgram__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TraceryProgram__Group__1__Impl
	rule__TraceryProgram__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TraceryProgram__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTraceryProgramAccess().getTraceryProgramAction_1()); }
	()
	{ after(grammarAccess.getTraceryProgramAccess().getTraceryProgramAction_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TraceryProgram__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TraceryProgram__Group__2__Impl
	rule__TraceryProgram__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TraceryProgram__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTraceryProgramAccess().getInitialStatementAssignment_2()); }
	(rule__TraceryProgram__InitialStatementAssignment_2)
	{ after(grammarAccess.getTraceryProgramAccess().getInitialStatementAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TraceryProgram__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TraceryProgram__Group__3__Impl
	rule__TraceryProgram__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TraceryProgram__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTraceryProgramAccess().getStatementsAssignment_3()); }
	(rule__TraceryProgram__StatementsAssignment_3)*
	{ after(grammarAccess.getTraceryProgramAccess().getStatementsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TraceryProgram__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TraceryProgram__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TraceryProgram__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTraceryProgramAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getTraceryProgramAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InitialJSONLine__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InitialJSONLine__Group__0__Impl
	rule__InitialJSONLine__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InitialJSONLine__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitialJSONLineAccess().getOriginKeyword_0()); }
	'&origin&'
	{ after(grammarAccess.getInitialJSONLineAccess().getOriginKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InitialJSONLine__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InitialJSONLine__Group__1__Impl
	rule__InitialJSONLine__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InitialJSONLine__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitialJSONLineAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getInitialJSONLineAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InitialJSONLine__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InitialJSONLine__Group__2__Impl
	rule__InitialJSONLine__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__InitialJSONLine__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitialJSONLineAccess().getLeftSquareBracketKeyword_2()); }
	'['
	{ after(grammarAccess.getInitialJSONLineAccess().getLeftSquareBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InitialJSONLine__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InitialJSONLine__Group__3__Impl
	rule__InitialJSONLine__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__InitialJSONLine__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitialJSONLineAccess().getStartValAssignment_3()); }
	(rule__InitialJSONLine__StartValAssignment_3)
	{ after(grammarAccess.getInitialJSONLineAccess().getStartValAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InitialJSONLine__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InitialJSONLine__Group__4__Impl
	rule__InitialJSONLine__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__InitialJSONLine__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitialJSONLineAccess().getValsAssignment_4()); }
	(rule__InitialJSONLine__ValsAssignment_4)*
	{ after(grammarAccess.getInitialJSONLineAccess().getValsAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InitialJSONLine__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InitialJSONLine__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InitialJSONLine__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitialJSONLineAccess().getRightSquareBracketKeyword_5()); }
	']'
	{ after(grammarAccess.getInitialJSONLineAccess().getRightSquareBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NormalJSONLine__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NormalJSONLine__Group__0__Impl
	rule__NormalJSONLine__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NormalJSONLine__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNormalJSONLineAccess().getCommaKeyword_0()); }
	','
	{ after(grammarAccess.getNormalJSONLineAccess().getCommaKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NormalJSONLine__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NormalJSONLine__Group__1__Impl
	rule__NormalJSONLine__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NormalJSONLine__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNormalJSONLineAccess().getAmpersandKeyword_1()); }
	'&'
	{ after(grammarAccess.getNormalJSONLineAccess().getAmpersandKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NormalJSONLine__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NormalJSONLine__Group__2__Impl
	rule__NormalJSONLine__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__NormalJSONLine__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNormalJSONLineAccess().getStartingJSONExpressionParserRuleCall_2()); }
	ruleStartingJSONExpression
	{ after(grammarAccess.getNormalJSONLineAccess().getStartingJSONExpressionParserRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NormalJSONLine__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NormalJSONLine__Group__3__Impl
	rule__NormalJSONLine__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__NormalJSONLine__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNormalJSONLineAccess().getAmpersandKeyword_3()); }
	'&'
	{ after(grammarAccess.getNormalJSONLineAccess().getAmpersandKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NormalJSONLine__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NormalJSONLine__Group__4__Impl
	rule__NormalJSONLine__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__NormalJSONLine__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNormalJSONLineAccess().getColonKeyword_4()); }
	':'
	{ after(grammarAccess.getNormalJSONLineAccess().getColonKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NormalJSONLine__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NormalJSONLine__Group__5__Impl
	rule__NormalJSONLine__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__NormalJSONLine__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNormalJSONLineAccess().getLeftSquareBracketKeyword_5()); }
	'['
	{ after(grammarAccess.getNormalJSONLineAccess().getLeftSquareBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NormalJSONLine__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NormalJSONLine__Group__6__Impl
	rule__NormalJSONLine__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__NormalJSONLine__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNormalJSONLineAccess().getStartValAssignment_6()); }
	(rule__NormalJSONLine__StartValAssignment_6)
	{ after(grammarAccess.getNormalJSONLineAccess().getStartValAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NormalJSONLine__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NormalJSONLine__Group__7__Impl
	rule__NormalJSONLine__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__NormalJSONLine__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNormalJSONLineAccess().getValsAssignment_7()); }
	(rule__NormalJSONLine__ValsAssignment_7)*
	{ after(grammarAccess.getNormalJSONLineAccess().getValsAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NormalJSONLine__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NormalJSONLine__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NormalJSONLine__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNormalJSONLineAccess().getRightSquareBracketKeyword_8()); }
	']'
	{ after(grammarAccess.getNormalJSONLineAccess().getRightSquareBracketKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StartValue__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StartValue__Group__0__Impl
	rule__StartValue__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StartValue__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStartValueAccess().getStartValueAction_0()); }
	()
	{ after(grammarAccess.getStartValueAccess().getStartValueAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StartValue__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StartValue__Group__1__Impl
	rule__StartValue__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StartValue__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStartValueAccess().getAmpersandKeyword_1()); }
	'&'
	{ after(grammarAccess.getStartValueAccess().getAmpersandKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StartValue__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StartValue__Group__2__Impl
	rule__StartValue__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StartValue__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStartValueAccess().getValueAssignment_2()); }
	(rule__StartValue__ValueAssignment_2)*
	{ after(grammarAccess.getStartValueAccess().getValueAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StartValue__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StartValue__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StartValue__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStartValueAccess().getAmpersandKeyword_3()); }
	'&'
	{ after(grammarAccess.getStartValueAccess().getAmpersandKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NormalValue__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NormalValue__Group__0__Impl
	rule__NormalValue__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NormalValue__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNormalValueAccess().getNormalValueAction_0()); }
	()
	{ after(grammarAccess.getNormalValueAccess().getNormalValueAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NormalValue__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NormalValue__Group__1__Impl
	rule__NormalValue__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NormalValue__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNormalValueAccess().getCommaKeyword_1()); }
	','
	{ after(grammarAccess.getNormalValueAccess().getCommaKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NormalValue__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NormalValue__Group__2__Impl
	rule__NormalValue__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__NormalValue__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNormalValueAccess().getAmpersandKeyword_2()); }
	'&'
	{ after(grammarAccess.getNormalValueAccess().getAmpersandKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NormalValue__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NormalValue__Group__3__Impl
	rule__NormalValue__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__NormalValue__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNormalValueAccess().getValueAssignment_3()); }
	(rule__NormalValue__ValueAssignment_3)*
	{ after(grammarAccess.getNormalValueAccess().getValueAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NormalValue__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NormalValue__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NormalValue__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNormalValueAccess().getAmpersandKeyword_4()); }
	'&'
	{ after(grammarAccess.getNormalValueAccess().getAmpersandKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InnerStatement__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InnerStatement__Group_1__0__Impl
	rule__InnerStatement__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InnerStatement__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInnerStatementAccess().getNumberSignKeyword_1_0()); }
	'#'
	{ after(grammarAccess.getInnerStatementAccess().getNumberSignKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InnerStatement__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InnerStatement__Group_1__1__Impl
	rule__InnerStatement__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InnerStatement__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInnerStatementAccess().getVariableDeclerationParserRuleCall_1_1()); }
	ruleVariableDecleration
	{ after(grammarAccess.getInnerStatementAccess().getVariableDeclerationParserRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InnerStatement__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InnerStatement__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InnerStatement__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInnerStatementAccess().getNumberSignKeyword_1_2()); }
	'#'
	{ after(grammarAccess.getInnerStatementAccess().getNumberSignKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InnerStatement__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InnerStatement__Group_2__0__Impl
	rule__InnerStatement__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InnerStatement__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInnerStatementAccess().getNumberSignKeyword_2_0()); }
	'#'
	{ after(grammarAccess.getInnerStatementAccess().getNumberSignKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InnerStatement__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InnerStatement__Group_2__1__Impl
	rule__InnerStatement__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InnerStatement__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInnerStatementAccess().getVariableDeclerationParserRuleCall_2_1()); }
	ruleVariableDecleration
	{ after(grammarAccess.getInnerStatementAccess().getVariableDeclerationParserRuleCall_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InnerStatement__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InnerStatement__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InnerStatement__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInnerStatementAccess().getEdKeyword_2_2()); }
	'.ed#'
	{ after(grammarAccess.getInnerStatementAccess().getEdKeyword_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InnerStatement__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InnerStatement__Group_3__0__Impl
	rule__InnerStatement__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InnerStatement__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInnerStatementAccess().getNumberSignKeyword_3_0()); }
	'#'
	{ after(grammarAccess.getInnerStatementAccess().getNumberSignKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InnerStatement__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InnerStatement__Group_3__1__Impl
	rule__InnerStatement__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InnerStatement__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInnerStatementAccess().getVariableDeclerationParserRuleCall_3_1()); }
	ruleVariableDecleration
	{ after(grammarAccess.getInnerStatementAccess().getVariableDeclerationParserRuleCall_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InnerStatement__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InnerStatement__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InnerStatement__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInnerStatementAccess().getAKeyword_3_2()); }
	'.a#'
	{ after(grammarAccess.getInnerStatementAccess().getAKeyword_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InnerStatement__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InnerStatement__Group_4__0__Impl
	rule__InnerStatement__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InnerStatement__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInnerStatementAccess().getNumberSignKeyword_4_0()); }
	'#'
	{ after(grammarAccess.getInnerStatementAccess().getNumberSignKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InnerStatement__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InnerStatement__Group_4__1__Impl
	rule__InnerStatement__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InnerStatement__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInnerStatementAccess().getVariableDeclerationParserRuleCall_4_1()); }
	ruleVariableDecleration
	{ after(grammarAccess.getInnerStatementAccess().getVariableDeclerationParserRuleCall_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InnerStatement__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InnerStatement__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InnerStatement__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInnerStatementAccess().getTheKeyword_4_2()); }
	'.the#'
	{ after(grammarAccess.getInnerStatementAccess().getTheKeyword_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InnerStatement__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InnerStatement__Group_5__0__Impl
	rule__InnerStatement__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InnerStatement__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInnerStatementAccess().getNumberSignKeyword_5_0()); }
	'#'
	{ after(grammarAccess.getInnerStatementAccess().getNumberSignKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InnerStatement__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InnerStatement__Group_5__1__Impl
	rule__InnerStatement__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InnerStatement__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInnerStatementAccess().getVariableDeclerationParserRuleCall_5_1()); }
	ruleVariableDecleration
	{ after(grammarAccess.getInnerStatementAccess().getVariableDeclerationParserRuleCall_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InnerStatement__Group_5__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InnerStatement__Group_5__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InnerStatement__Group_5__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInnerStatementAccess().getCapitaliseKeyword_5_2()); }
	'.capitalise#'
	{ after(grammarAccess.getInnerStatementAccess().getCapitaliseKeyword_5_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TraceryProgram__InitialStatementAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTraceryProgramAccess().getInitialStatementInitialJSONLineParserRuleCall_2_0()); }
		ruleInitialJSONLine
		{ after(grammarAccess.getTraceryProgramAccess().getInitialStatementInitialJSONLineParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TraceryProgram__StatementsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTraceryProgramAccess().getStatementsNormalJSONLineParserRuleCall_3_0()); }
		ruleNormalJSONLine
		{ after(grammarAccess.getTraceryProgramAccess().getStatementsNormalJSONLineParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDecleration__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableDeclerationAccess().getNameIDTerminalRuleCall_0()); }
		RULE_ID
		{ after(grammarAccess.getVariableDeclerationAccess().getNameIDTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InitialJSONLine__StartValAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInitialJSONLineAccess().getStartValStartValueParserRuleCall_3_0()); }
		rulestartValue
		{ after(grammarAccess.getInitialJSONLineAccess().getStartValStartValueParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InitialJSONLine__ValsAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInitialJSONLineAccess().getValsNormalValueParserRuleCall_4_0()); }
		rulenormalValue
		{ after(grammarAccess.getInitialJSONLineAccess().getValsNormalValueParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NormalJSONLine__StartValAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNormalJSONLineAccess().getStartValStartValueParserRuleCall_6_0()); }
		rulestartValue
		{ after(grammarAccess.getNormalJSONLineAccess().getStartValStartValueParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NormalJSONLine__ValsAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNormalJSONLineAccess().getValsNormalValueParserRuleCall_7_0()); }
		rulenormalValue
		{ after(grammarAccess.getNormalJSONLineAccess().getValsNormalValueParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StartValue__ValueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStartValueAccess().getValueInnerStatementParserRuleCall_2_0()); }
		ruleInnerStatement
		{ after(grammarAccess.getStartValueAccess().getValueInnerStatementParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NormalValue__ValueAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNormalValueAccess().getValueInnerStatementParserRuleCall_3_0()); }
		ruleInnerStatement
		{ after(grammarAccess.getNormalValueAccess().getValueInnerStatementParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InnerStatement__ValueAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInnerStatementAccess().getValueSTRINGTerminalRuleCall_0_0()); }
		RULE_STRING
		{ after(grammarAccess.getInnerStatementAccess().getValueSTRINGTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StartingJSONExpression__VarAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStartingJSONExpressionAccess().getVarVariableDeclerationCrossReference_0()); }
		(
			{ before(grammarAccess.getStartingJSONExpressionAccess().getVarVariableDeclerationIDTerminalRuleCall_0_1()); }
			RULE_ID
			{ after(grammarAccess.getStartingJSONExpressionAccess().getVarVariableDeclerationIDTerminalRuleCall_0_1()); }
		)
		{ after(grammarAccess.getStartingJSONExpressionAccess().getVarVariableDeclerationCrossReference_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
